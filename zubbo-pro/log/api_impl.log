2018-03-21 11:28:18:491 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemProperties] PropertySource with lowest search precedence
2018-03-21 11:28:18:504 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemEnvironment] PropertySource with lowest search precedence
2018-03-21 11:28:18:504 [main] [AbstractEnvironment.java:127][DEBUG]:Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2018-03-21 11:28:18:508 [main] [AbstractApplicationContext.java:578][INFO]:Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@726f3b58: startup date [Wed Mar 21 11:28:18 CST 2018]; root of context hierarchy
2018-03-21 11:28:18:684 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemProperties] PropertySource with lowest search precedence
2018-03-21 11:28:18:685 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemEnvironment] PropertySource with lowest search precedence
2018-03-21 11:28:18:686 [main] [AbstractEnvironment.java:127][DEBUG]:Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2018-03-21 11:28:18:696 [main] [XmlBeanDefinitionReader.java:317][INFO]:Loading XML bean definitions from URL [file:/D:/workspace/zubbo/zubbo-pro/target/classes/applicationContext.xml]
2018-03-21 11:28:18:744 [main] [DefaultDocumentLoader.java:73][DEBUG]:Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2018-03-21 11:28:18:786 [main] [PluggableSchemaResolver.java:141][DEBUG]:Loading schema mappings from [META-INF/spring.schemas]
2018-03-21 11:28:18:810 [main] [PluggableSchemaResolver.java:147][DEBUG]:Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2018-03-21 11:28:18:813 [main] [PluggableSchemaResolver.java:119][DEBUG]:Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
2018-03-21 11:28:18:849 [main] [PluggableSchemaResolver.java:119][DEBUG]:Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2018-03-21 11:28:18:880 [main] [DefaultBeanDefinitionDocumentReader.java:92][DEBUG]:Loading bean definitions
2018-03-21 11:28:18:895 [main] [DefaultNamespaceHandlerResolver.java:157][DEBUG]:Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2018-03-21 11:28:18:938 [main] [?:?][INFO]:using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-03-21 11:28:19:016 [main] [AbstractBeanDefinitionReader.java:224][DEBUG]:Loaded 5 bean definitions from location pattern [classpath*:applicationContext.xml]
2018-03-21 11:28:19:017 [main] [AbstractApplicationContext.java:612][DEBUG]:Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@726f3b58: org.springframework.beans.factory.support.DefaultListableBeanFactory@6adede5: defining beans [testService,t,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.zubbo.api.TestService]; root of factory hierarchy
2018-03-21 11:28:19:072 [main] [AbstractApplicationContext.java:718][DEBUG]:Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1e6d1014]
2018-03-21 11:28:19:076 [main] [AbstractApplicationContext.java:742][DEBUG]:Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@51cdd8a]
2018-03-21 11:28:19:077 [main] [DefaultListableBeanFactory.java:741][DEBUG]:Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6adede5: defining beans [testService,t,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.zubbo.api.TestService]; root of factory hierarchy
2018-03-21 11:28:19:078 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'testService'
2018-03-21 11:28:19:079 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'testService'
2018-03-21 11:28:19:093 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'testService' to allow for resolving potential circular references
2018-03-21 11:28:19:094 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'testService'
2018-03-21 11:28:19:095 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 't'
2018-03-21 11:28:19:095 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 't'
2018-03-21 11:28:19:096 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 't' to allow for resolving potential circular references
2018-03-21 11:28:19:124 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 't'
2018-03-21 11:28:19:125 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 11:28:19:125 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 11:28:19:126 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2018-03-21 11:28:19:132 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 11:28:19:133 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'dubbo'
2018-03-21 11:28:19:133 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'dubbo'
2018-03-21 11:28:19:133 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2018-03-21 11:28:19:157 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'dubbo'
2018-03-21 11:28:19:158 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'com.zubbo.api.TestService'
2018-03-21 11:28:19:158 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'com.zubbo.api.TestService'
2018-03-21 11:28:19:280 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:494 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:507 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'com.zubbo.api.TestService' to allow for resolving potential circular references
2018-03-21 11:28:19:538 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'testService'
2018-03-21 11:28:19:540 [main] [AbstractAutowireCapableBeanFactory.java:1620][DEBUG]:Invoking afterPropertiesSet() on bean with name 'com.zubbo.api.TestService'
2018-03-21 11:28:19:541 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 't'
2018-03-21 11:28:19:541 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 11:28:19:542 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'dubbo'
2018-03-21 11:28:19:542 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'com.zubbo.api.TestService'
2018-03-21 11:28:19:544 [main] [AbstractApplicationContext.java:769][DEBUG]:Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@197d671]
2018-03-21 11:28:19:545 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'lifecycleProcessor'
2018-03-21 11:28:19:563 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'com.zubbo.api.TestService'
2018-03-21 11:28:19:564 [main] [ServiceBean.java:107][INFO]: [DUBBO] The service ready on spring started. service: com.zubbo.api.TestService, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:685 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:699 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:748 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:761 [main] [ServiceConfig.java:510][INFO]: [DUBBO] Export dubbo service com.zubbo.api.TestService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:761 [main] [ServiceConfig.java:470][INFO]: [DUBBO] Export dubbo service com.zubbo.api.TestService to url dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7088&side=provider&timestamp=1521602899620, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:761 [main] [ServiceConfig.java:481][INFO]: [DUBBO] Register dubbo service com.zubbo.api.TestService url dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7088&side=provider&timestamp=1521602899620 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=t&dubbo=2.5.3&pid=7088&registry=zookeeper&timestamp=1521602899584, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:771 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:799 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:820 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:856 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:867 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:19:903 [main] [NettyHelper.java:70][DEBUG]: [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:20:085 [main] [AbstractServer.java:69][INFO]: [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.0.102:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:20:090 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:20:112 [main] [AbstractRegistry.java:232][INFO]: [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.zubbo.api.TestService=empty://192.168.0.102/com.zubbo.api.TestService?application=c&category=configurators&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=2376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1521511930222 empty://192.168.0.102/com.zubbo.api.TestService?application=c&category=routers&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=2376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1521511930222 dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=4516&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1521511893365}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:28:20:133 [main] [ZkConnection.java:63][DEBUG]:Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
2018-03-21 11:28:20:133 [ZkClient-EventThread-14-127.0.0.1:2181] [ZkEventThread.java:64][INFO]:Starting ZkClient event thread.
2018-03-21 11:28:20:140 [main] [Environment.java:97][INFO]:Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
2018-03-21 11:28:20:140 [main] [Environment.java:97][INFO]:Client environment:host.name=oys-PC
2018-03-21 11:28:20:141 [main] [Environment.java:97][INFO]:Client environment:java.version=1.8.0_131
2018-03-21 11:28:20:141 [main] [Environment.java:97][INFO]:Client environment:java.vendor=Oracle Corporation
2018-03-21 11:28:20:141 [main] [Environment.java:97][INFO]:Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
2018-03-21 11:28:20:142 [main] [Environment.java:97][INFO]:Client environment:java.class.path=D:\workspace\zubbo\zubbo-pro\target\classes;D:\workspace\zubbo\zubbo-api\target\classes;D:\Maven_Repository\org\springframework\spring-core\4.2.4.RELEASE\spring-core-4.2.4.RELEASE.jar;D:\Maven_Repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;D:\Maven_Repository\org\springframework\spring-orm\4.2.4.RELEASE\spring-orm-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-aspects\4.2.4.RELEASE\spring-aspects-4.2.4.RELEASE.jar;D:\Maven_Repository\org\aspectj\aspectjweaver\1.8.7\aspectjweaver-1.8.7.jar;D:\Maven_Repository\org\springframework\spring-oxm\4.2.4.RELEASE\spring-oxm-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-jdbc\4.2.4.RELEASE\spring-jdbc-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-tx\4.2.4.RELEASE\spring-tx-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-aop\4.2.4.RELEASE\spring-aop-4.2.4.RELEASE.jar;D:\Maven_Repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\Maven_Repository\org\springframework\spring-web\4.2.4.RELEASE\spring-web-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-context\4.2.4.RELEASE\spring-context-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-webmvc\4.2.4.RELEASE\spring-webmvc-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-expression\4.2.4.RELEASE\spring-expression-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-context-support\4.2.4.RELEASE\spring-context-support-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-test\4.2.4.RELEASE\spring-test-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-beans\4.2.4.RELEASE\spring-beans-4.2.4.RELEASE.jar;D:\Maven_Repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;D:\Maven_Repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;D:\Maven_Repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\Maven_Repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;D:\Maven_Repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;D:\Maven_Repository\org\apache\zookeeper\zookeeper\3.3.3\zookeeper-3.3.3.jar;D:\Maven_Repository\jline\jline\0.9.94\jline-0.9.94.jar;D:\Maven_Repository\log4j\log4j\1.2.14\log4j-1.2.14.jar
2018-03-21 11:28:20:142 [main] [Environment.java:97][INFO]:Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_66\bin;D:\apache-maven-3.3.9\bin;D:\TortoiseSVN\bin;C:\Program Files (x86)\HP\LoadRunner\strawberry-perl\perl\bin;C:\Program Files\Git\cmd;;D:\Program File\Microsoft VS Code\bin;D:\eclipse;;.
2018-03-21 11:28:20:142 [main] [Environment.java:97][INFO]:Client environment:java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\
2018-03-21 11:28:20:142 [main] [Environment.java:97][INFO]:Client environment:java.compiler=<NA>
2018-03-21 11:28:20:143 [main] [Environment.java:97][INFO]:Client environment:os.name=Windows 7
2018-03-21 11:28:20:143 [main] [Environment.java:97][INFO]:Client environment:os.arch=amd64
2018-03-21 11:28:20:143 [main] [Environment.java:97][INFO]:Client environment:os.version=6.1
2018-03-21 11:28:20:143 [main] [Environment.java:97][INFO]:Client environment:user.name=Administrator
2018-03-21 11:28:20:145 [main] [Environment.java:97][INFO]:Client environment:user.home=C:\Users\Administrator
2018-03-21 11:28:20:145 [main] [Environment.java:97][INFO]:Client environment:user.dir=D:\workspace\zubbo\zubbo-pro
2018-03-21 11:28:20:146 [main] [ZooKeeper.java:373][INFO]:Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@2b48a640
2018-03-21 11:28:20:153 [main] [ClientCnxn.java:99][DEBUG]:zookeeper.disableAutoWatchReset is false
2018-03-21 11:28:20:160 [main] [ZkClient.java:874][DEBUG]:Awaiting connection to Zookeeper server
2018-03-21 11:28:20:160 [main-SendThread()] [ClientCnxn.java:1041][INFO]:Opening socket connection to server /127.0.0.1:2181
2018-03-21 11:28:20:161 [main] [ZkClient.java:628][DEBUG]:Waiting for keeper state SyncConnected
2018-03-21 11:28:21:198 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1161][WARN]:Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1119)
2018-03-21 11:28:21:201 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1208][DEBUG]:Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:780)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1205)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 11:28:21:202 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1215][DEBUG]:Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:797)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1212)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 11:28:22:518 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1041][INFO]:Opening socket connection to server 127.0.0.1/127.0.0.1:2181
2018-03-21 11:28:23:519 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1161][WARN]:Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1119)
2018-03-21 11:28:23:520 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1208][DEBUG]:Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:780)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1205)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 11:28:23:521 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1215][DEBUG]:Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:797)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1212)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 11:28:24:944 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1041][INFO]:Opening socket connection to server 127.0.0.1/127.0.0.1:2181
2018-03-21 11:44:12:753 [main] [?:?][INFO]:using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-03-21 11:44:12:811 [main] [Main.java:58][INFO]: [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 11:44:12:888 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemProperties] PropertySource with lowest search precedence
2018-03-21 11:44:12:889 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemEnvironment] PropertySource with lowest search precedence
2018-03-21 11:44:12:890 [main] [AbstractEnvironment.java:127][DEBUG]:Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2018-03-21 11:44:12:894 [main] [AbstractApplicationContext.java:578][INFO]:Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@21588809: startup date [Wed Mar 21 11:44:12 CST 2018]; root of context hierarchy
2018-03-21 11:44:12:919 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemProperties] PropertySource with lowest search precedence
2018-03-21 11:44:12:920 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemEnvironment] PropertySource with lowest search precedence
2018-03-21 11:44:12:920 [main] [AbstractEnvironment.java:127][DEBUG]:Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2018-03-21 11:44:12:926 [main] [PathMatchingResourcePatternResolver.java:424][DEBUG]:Resolved location pattern [classpath*:META-INF/spring/*.xml] to resources []
2018-03-21 11:44:12:926 [main] [AbstractBeanDefinitionReader.java:224][DEBUG]:Loaded 0 bean definitions from location pattern [classpath*:META-INF/spring/*.xml]
2018-03-21 11:44:12:927 [main] [AbstractApplicationContext.java:612][DEBUG]:Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@21588809: org.springframework.beans.factory.support.DefaultListableBeanFactory@51efea79: defining beans []; root of factory hierarchy
2018-03-21 11:44:12:941 [main] [AbstractApplicationContext.java:718][DEBUG]:Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6eebc39e]
2018-03-21 11:44:12:943 [main] [AbstractApplicationContext.java:742][DEBUG]:Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@271053e1]
2018-03-21 11:44:12:943 [main] [DefaultListableBeanFactory.java:741][DEBUG]:Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@51efea79: defining beans []; root of factory hierarchy
2018-03-21 11:44:12:944 [main] [AbstractApplicationContext.java:769][DEBUG]:Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@73ad2d6]
2018-03-21 11:44:12:945 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'lifecycleProcessor'
2018-03-21 11:44:12:964 [main] [PropertySourcesPropertyResolver.java:81][DEBUG]:Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2018-03-21 11:44:12:965 [main] [PropertySourcesPropertyResolver.java:81][DEBUG]:Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2018-03-21 11:44:12:965 [main] [PropertySourcesPropertyResolver.java:103][DEBUG]:Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2018-03-21 11:44:12:973 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'lifecycleProcessor'
2018-03-21 11:44:12:973 [main] [Main.java:81][INFO]: [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:54:703 [main] [?:?][INFO]:using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-03-21 15:06:54:747 [main] [Main.java:58][INFO]: [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:54:819 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemProperties] PropertySource with lowest search precedence
2018-03-21 15:06:54:820 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemEnvironment] PropertySource with lowest search precedence
2018-03-21 15:06:54:821 [main] [AbstractEnvironment.java:127][DEBUG]:Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2018-03-21 15:06:54:825 [main] [AbstractApplicationContext.java:578][INFO]:Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@21588809: startup date [Wed Mar 21 15:06:54 CST 2018]; root of context hierarchy
2018-03-21 15:06:54:850 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemProperties] PropertySource with lowest search precedence
2018-03-21 15:06:54:850 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemEnvironment] PropertySource with lowest search precedence
2018-03-21 15:06:54:851 [main] [AbstractEnvironment.java:127][DEBUG]:Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2018-03-21 15:06:54:860 [main] [PathMatchingResourcePatternResolver.java:631][DEBUG]:Looking for matching resources in directory tree [D:\workspace\zubbo\zubbo-pro\target\classes\META-INF\spring]
2018-03-21 15:06:54:860 [main] [PathMatchingResourcePatternResolver.java:693][DEBUG]:Searching directory [D:\workspace\zubbo\zubbo-pro\target\classes\META-INF\spring] for files matching pattern [D:/workspace/zubbo/zubbo-pro/target/classes/META-INF/spring/*.xml]
2018-03-21 15:06:54:862 [main] [PathMatchingResourcePatternResolver.java:424][DEBUG]:Resolved location pattern [classpath*:META-INF/spring/*.xml] to resources [file [D:\workspace\zubbo\zubbo-pro\target\classes\META-INF\spring\applicationContext.xml]]
2018-03-21 15:06:54:863 [main] [XmlBeanDefinitionReader.java:317][INFO]:Loading XML bean definitions from file [D:\workspace\zubbo\zubbo-pro\target\classes\META-INF\spring\applicationContext.xml]
2018-03-21 15:06:54:876 [main] [DefaultDocumentLoader.java:73][DEBUG]:Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2018-03-21 15:06:54:903 [main] [PluggableSchemaResolver.java:141][DEBUG]:Loading schema mappings from [META-INF/spring.schemas]
2018-03-21 15:06:54:907 [main] [PluggableSchemaResolver.java:147][DEBUG]:Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2018-03-21 15:06:54:910 [main] [PluggableSchemaResolver.java:119][DEBUG]:Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
2018-03-21 15:06:54:942 [main] [PluggableSchemaResolver.java:119][DEBUG]:Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2018-03-21 15:06:54:965 [main] [DefaultBeanDefinitionDocumentReader.java:92][DEBUG]:Loading bean definitions
2018-03-21 15:06:54:981 [main] [DefaultNamespaceHandlerResolver.java:157][DEBUG]:Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2018-03-21 15:06:55:001 [main] [AbstractBeanDefinitionReader.java:224][DEBUG]:Loaded 5 bean definitions from location pattern [classpath*:META-INF/spring/*.xml]
2018-03-21 15:06:55:003 [main] [AbstractApplicationContext.java:612][DEBUG]:Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@21588809: org.springframework.beans.factory.support.DefaultListableBeanFactory@3a5ed7a6: defining beans [testService,t,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.zubbo.api.TestService]; root of factory hierarchy
2018-03-21 15:06:55:021 [main] [AbstractApplicationContext.java:718][DEBUG]:Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@34c4973]
2018-03-21 15:06:55:023 [main] [AbstractApplicationContext.java:742][DEBUG]:Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@86be70a]
2018-03-21 15:06:55:024 [main] [DefaultListableBeanFactory.java:741][DEBUG]:Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3a5ed7a6: defining beans [testService,t,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.zubbo.api.TestService]; root of factory hierarchy
2018-03-21 15:06:55:025 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'testService'
2018-03-21 15:06:55:025 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'testService'
2018-03-21 15:06:55:036 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'testService' to allow for resolving potential circular references
2018-03-21 15:06:55:038 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'testService'
2018-03-21 15:06:55:038 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 't'
2018-03-21 15:06:55:038 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 't'
2018-03-21 15:06:55:039 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 't' to allow for resolving potential circular references
2018-03-21 15:06:55:060 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 't'
2018-03-21 15:06:55:061 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 15:06:55:061 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 15:06:55:061 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2018-03-21 15:06:55:066 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 15:06:55:067 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'dubbo'
2018-03-21 15:06:55:067 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'dubbo'
2018-03-21 15:06:55:067 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2018-03-21 15:06:55:078 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'dubbo'
2018-03-21 15:06:55:079 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'com.zubbo.api.TestService'
2018-03-21 15:06:55:079 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'com.zubbo.api.TestService'
2018-03-21 15:06:55:100 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:185 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:197 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'com.zubbo.api.TestService' to allow for resolving potential circular references
2018-03-21 15:06:55:217 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'testService'
2018-03-21 15:06:55:219 [main] [AbstractAutowireCapableBeanFactory.java:1620][DEBUG]:Invoking afterPropertiesSet() on bean with name 'com.zubbo.api.TestService'
2018-03-21 15:06:55:220 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 't'
2018-03-21 15:06:55:220 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 15:06:55:221 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'dubbo'
2018-03-21 15:06:55:221 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'com.zubbo.api.TestService'
2018-03-21 15:06:55:222 [main] [AbstractApplicationContext.java:769][DEBUG]:Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5db250b4]
2018-03-21 15:06:55:223 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'lifecycleProcessor'
2018-03-21 15:06:55:226 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'com.zubbo.api.TestService'
2018-03-21 15:06:55:227 [main] [ServiceBean.java:107][INFO]: [DUBBO] The service ready on spring started. service: com.zubbo.api.TestService, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:293 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:303 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:315 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:325 [main] [ServiceConfig.java:510][INFO]: [DUBBO] Export dubbo service com.zubbo.api.TestService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:325 [main] [ServiceConfig.java:470][INFO]: [DUBBO] Export dubbo service com.zubbo.api.TestService to url dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7944&side=provider&timestamp=1521616015254, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:325 [main] [ServiceConfig.java:481][INFO]: [DUBBO] Register dubbo service com.zubbo.api.TestService url dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7944&side=provider&timestamp=1521616015254 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=t&dubbo=2.5.3&pid=7944&registry=zookeeper&timestamp=1521616015236, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:331 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:339 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:359 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:375 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:386 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:412 [main] [NettyHelper.java:70][DEBUG]: [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:554 [main] [AbstractServer.java:69][INFO]: [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.0.102:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:559 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:571 [main] [AbstractRegistry.java:232][INFO]: [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.zubbo.api.TestService=empty://192.168.0.102/com.zubbo.api.TestService?application=c&category=configurators&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=2376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1521511930222 empty://192.168.0.102/com.zubbo.api.TestService?application=c&category=routers&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=2376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1521511930222 dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=4516&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1521511893365}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:06:55:580 [main] [ZkConnection.java:63][DEBUG]:Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
2018-03-21 15:06:55:580 [ZkClient-EventThread-14-127.0.0.1:2181] [ZkEventThread.java:64][INFO]:Starting ZkClient event thread.
2018-03-21 15:06:55:585 [main] [Environment.java:97][INFO]:Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
2018-03-21 15:06:55:585 [main] [Environment.java:97][INFO]:Client environment:host.name=oys-PC
2018-03-21 15:06:55:585 [main] [Environment.java:97][INFO]:Client environment:java.version=1.8.0_131
2018-03-21 15:06:55:586 [main] [Environment.java:97][INFO]:Client environment:java.vendor=Oracle Corporation
2018-03-21 15:06:55:586 [main] [Environment.java:97][INFO]:Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
2018-03-21 15:06:55:586 [main] [Environment.java:97][INFO]:Client environment:java.class.path=D:\workspace\zubbo\zubbo-pro\target\classes;D:\workspace\zubbo\zubbo-api\target\classes;D:\Maven_Repository\org\springframework\spring-core\4.2.4.RELEASE\spring-core-4.2.4.RELEASE.jar;D:\Maven_Repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;D:\Maven_Repository\org\springframework\spring-orm\4.2.4.RELEASE\spring-orm-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-aspects\4.2.4.RELEASE\spring-aspects-4.2.4.RELEASE.jar;D:\Maven_Repository\org\aspectj\aspectjweaver\1.8.7\aspectjweaver-1.8.7.jar;D:\Maven_Repository\org\springframework\spring-oxm\4.2.4.RELEASE\spring-oxm-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-jdbc\4.2.4.RELEASE\spring-jdbc-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-tx\4.2.4.RELEASE\spring-tx-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-aop\4.2.4.RELEASE\spring-aop-4.2.4.RELEASE.jar;D:\Maven_Repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\Maven_Repository\org\springframework\spring-web\4.2.4.RELEASE\spring-web-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-context\4.2.4.RELEASE\spring-context-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-webmvc\4.2.4.RELEASE\spring-webmvc-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-expression\4.2.4.RELEASE\spring-expression-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-context-support\4.2.4.RELEASE\spring-context-support-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-test\4.2.4.RELEASE\spring-test-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-beans\4.2.4.RELEASE\spring-beans-4.2.4.RELEASE.jar;D:\Maven_Repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;D:\Maven_Repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;D:\Maven_Repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\Maven_Repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;D:\Maven_Repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;D:\Maven_Repository\org\apache\zookeeper\zookeeper\3.3.3\zookeeper-3.3.3.jar;D:\Maven_Repository\jline\jline\0.9.94\jline-0.9.94.jar;D:\Maven_Repository\log4j\log4j\1.2.14\log4j-1.2.14.jar
2018-03-21 15:06:55:587 [main] [Environment.java:97][INFO]:Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_66\bin;D:\apache-maven-3.3.9\bin;D:\TortoiseSVN\bin;C:\Program Files (x86)\HP\LoadRunner\strawberry-perl\perl\bin;C:\Program Files\Git\cmd;;D:\Program File\Microsoft VS Code\bin;D:\eclipse;;.
2018-03-21 15:06:55:587 [main] [Environment.java:97][INFO]:Client environment:java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\
2018-03-21 15:06:55:587 [main] [Environment.java:97][INFO]:Client environment:java.compiler=<NA>
2018-03-21 15:06:55:587 [main] [Environment.java:97][INFO]:Client environment:os.name=Windows 7
2018-03-21 15:06:55:587 [main] [Environment.java:97][INFO]:Client environment:os.arch=amd64
2018-03-21 15:06:55:588 [main] [Environment.java:97][INFO]:Client environment:os.version=6.1
2018-03-21 15:06:55:588 [main] [Environment.java:97][INFO]:Client environment:user.name=Administrator
2018-03-21 15:06:55:588 [main] [Environment.java:97][INFO]:Client environment:user.home=C:\Users\Administrator
2018-03-21 15:06:55:588 [main] [Environment.java:97][INFO]:Client environment:user.dir=D:\workspace\zubbo\zubbo-pro
2018-03-21 15:06:55:589 [main] [ZooKeeper.java:373][INFO]:Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@67c33749
2018-03-21 15:06:55:591 [main] [ClientCnxn.java:99][DEBUG]:zookeeper.disableAutoWatchReset is false
2018-03-21 15:06:55:597 [main] [ZkClient.java:874][DEBUG]:Awaiting connection to Zookeeper server
2018-03-21 15:06:55:597 [main-SendThread()] [ClientCnxn.java:1041][INFO]:Opening socket connection to server /127.0.0.1:2181
2018-03-21 15:06:55:598 [main] [ZkClient.java:628][DEBUG]:Waiting for keeper state SyncConnected
2018-03-21 15:06:56:606 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1161][WARN]:Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1119)
2018-03-21 15:06:56:608 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1208][DEBUG]:Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:780)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1205)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:06:56:609 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1215][DEBUG]:Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:797)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1212)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:06:57:900 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1041][INFO]:Opening socket connection to server 127.0.0.1/127.0.0.1:2181
2018-03-21 15:06:58:901 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1161][WARN]:Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1119)
2018-03-21 15:06:58:902 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1208][DEBUG]:Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:780)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1205)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:06:58:903 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1215][DEBUG]:Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:797)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1212)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:07:00:933 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1041][INFO]:Opening socket connection to server 127.0.0.1/127.0.0.1:2181
2018-03-21 15:07:01:934 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1161][WARN]:Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1119)
2018-03-21 15:07:01:935 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1208][DEBUG]:Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:780)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1205)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:07:01:936 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1215][DEBUG]:Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:797)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1212)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:07:03:356 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1041][INFO]:Opening socket connection to server 127.0.0.1/127.0.0.1:2181
2018-03-21 15:07:04:358 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1161][WARN]:Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1119)
2018-03-21 15:07:04:359 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1208][DEBUG]:Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:780)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1205)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:07:04:360 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1215][DEBUG]:Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:797)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1212)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:07:06:392 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1041][INFO]:Opening socket connection to server 127.0.0.1/127.0.0.1:2181
2018-03-21 15:07:07:393 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1161][WARN]:Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused: no further information
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1119)
2018-03-21 15:07:07:393 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1208][DEBUG]:Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:780)
	at sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:399)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1205)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:07:07:393 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1215][DEBUG]:Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:797)
	at sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:407)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1212)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1170)
2018-03-21 15:07:08:854 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:1041][INFO]:Opening socket connection to server 127.0.0.1/127.0.0.1:2181
2018-03-21 15:07:36:232 [main] [?:?][INFO]:using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2018-03-21 15:07:36:276 [main] [Main.java:58][INFO]: [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:349 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemProperties] PropertySource with lowest search precedence
2018-03-21 15:07:36:350 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemEnvironment] PropertySource with lowest search precedence
2018-03-21 15:07:36:350 [main] [AbstractEnvironment.java:127][DEBUG]:Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2018-03-21 15:07:36:354 [main] [AbstractApplicationContext.java:578][INFO]:Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@21588809: startup date [Wed Mar 21 15:07:36 CST 2018]; root of context hierarchy
2018-03-21 15:07:36:381 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemProperties] PropertySource with lowest search precedence
2018-03-21 15:07:36:382 [main] [MutablePropertySources.java:109][DEBUG]:Adding [systemEnvironment] PropertySource with lowest search precedence
2018-03-21 15:07:36:382 [main] [AbstractEnvironment.java:127][DEBUG]:Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2018-03-21 15:07:36:391 [main] [PathMatchingResourcePatternResolver.java:631][DEBUG]:Looking for matching resources in directory tree [D:\workspace\zubbo\zubbo-pro\target\classes\META-INF\spring]
2018-03-21 15:07:36:391 [main] [PathMatchingResourcePatternResolver.java:693][DEBUG]:Searching directory [D:\workspace\zubbo\zubbo-pro\target\classes\META-INF\spring] for files matching pattern [D:/workspace/zubbo/zubbo-pro/target/classes/META-INF/spring/*.xml]
2018-03-21 15:07:36:393 [main] [PathMatchingResourcePatternResolver.java:424][DEBUG]:Resolved location pattern [classpath*:META-INF/spring/*.xml] to resources [file [D:\workspace\zubbo\zubbo-pro\target\classes\META-INF\spring\applicationContext.xml]]
2018-03-21 15:07:36:394 [main] [XmlBeanDefinitionReader.java:317][INFO]:Loading XML bean definitions from file [D:\workspace\zubbo\zubbo-pro\target\classes\META-INF\spring\applicationContext.xml]
2018-03-21 15:07:36:407 [main] [DefaultDocumentLoader.java:73][DEBUG]:Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2018-03-21 15:07:36:431 [main] [PluggableSchemaResolver.java:141][DEBUG]:Loading schema mappings from [META-INF/spring.schemas]
2018-03-21 15:07:36:435 [main] [PluggableSchemaResolver.java:147][DEBUG]:Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd}
2018-03-21 15:07:36:438 [main] [PluggableSchemaResolver.java:119][DEBUG]:Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd
2018-03-21 15:07:36:471 [main] [PluggableSchemaResolver.java:119][DEBUG]:Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2018-03-21 15:07:36:495 [main] [DefaultBeanDefinitionDocumentReader.java:92][DEBUG]:Loading bean definitions
2018-03-21 15:07:36:509 [main] [DefaultNamespaceHandlerResolver.java:157][DEBUG]:Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2018-03-21 15:07:36:532 [main] [AbstractBeanDefinitionReader.java:224][DEBUG]:Loaded 5 bean definitions from location pattern [classpath*:META-INF/spring/*.xml]
2018-03-21 15:07:36:532 [main] [AbstractApplicationContext.java:612][DEBUG]:Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@21588809: org.springframework.beans.factory.support.DefaultListableBeanFactory@3a5ed7a6: defining beans [testService,t,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.zubbo.api.TestService]; root of factory hierarchy
2018-03-21 15:07:36:552 [main] [AbstractApplicationContext.java:718][DEBUG]:Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@34c4973]
2018-03-21 15:07:36:554 [main] [AbstractApplicationContext.java:742][DEBUG]:Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@86be70a]
2018-03-21 15:07:36:554 [main] [DefaultListableBeanFactory.java:741][DEBUG]:Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3a5ed7a6: defining beans [testService,t,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.zubbo.api.TestService]; root of factory hierarchy
2018-03-21 15:07:36:555 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'testService'
2018-03-21 15:07:36:555 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'testService'
2018-03-21 15:07:36:566 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'testService' to allow for resolving potential circular references
2018-03-21 15:07:36:567 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'testService'
2018-03-21 15:07:36:568 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 't'
2018-03-21 15:07:36:568 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 't'
2018-03-21 15:07:36:569 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 't' to allow for resolving potential circular references
2018-03-21 15:07:36:589 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 't'
2018-03-21 15:07:36:590 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 15:07:36:590 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 15:07:36:590 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2018-03-21 15:07:36:595 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 15:07:36:596 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'dubbo'
2018-03-21 15:07:36:596 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'dubbo'
2018-03-21 15:07:36:596 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2018-03-21 15:07:36:608 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'dubbo'
2018-03-21 15:07:36:609 [main] [DefaultSingletonBeanRegistry.java:221][DEBUG]:Creating shared instance of singleton bean 'com.zubbo.api.TestService'
2018-03-21 15:07:36:609 [main] [AbstractAutowireCapableBeanFactory.java:448][DEBUG]:Creating instance of bean 'com.zubbo.api.TestService'
2018-03-21 15:07:36:630 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:714 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:727 [main] [AbstractAutowireCapableBeanFactory.java:529][DEBUG]:Eagerly caching bean 'com.zubbo.api.TestService' to allow for resolving potential circular references
2018-03-21 15:07:36:747 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'testService'
2018-03-21 15:07:36:750 [main] [AbstractAutowireCapableBeanFactory.java:1620][DEBUG]:Invoking afterPropertiesSet() on bean with name 'com.zubbo.api.TestService'
2018-03-21 15:07:36:751 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 't'
2018-03-21 15:07:36:751 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2018-03-21 15:07:36:751 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'dubbo'
2018-03-21 15:07:36:752 [main] [AbstractAutowireCapableBeanFactory.java:484][DEBUG]:Finished creating instance of bean 'com.zubbo.api.TestService'
2018-03-21 15:07:36:754 [main] [AbstractApplicationContext.java:769][DEBUG]:Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5db250b4]
2018-03-21 15:07:36:754 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'lifecycleProcessor'
2018-03-21 15:07:36:759 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'com.zubbo.api.TestService'
2018-03-21 15:07:36:759 [main] [ServiceBean.java:107][INFO]: [DUBBO] The service ready on spring started. service: com.zubbo.api.TestService, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:828 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:839 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:851 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:862 [main] [ServiceConfig.java:510][INFO]: [DUBBO] Export dubbo service com.zubbo.api.TestService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:862 [main] [ServiceConfig.java:470][INFO]: [DUBBO] Export dubbo service com.zubbo.api.TestService to url dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7236&side=provider&timestamp=1521616056786, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:863 [main] [ServiceConfig.java:481][INFO]: [DUBBO] Register dubbo service com.zubbo.api.TestService url dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7236&side=provider&timestamp=1521616056786 to registry registry://127.0.0.1:2181/com.alibaba.dubbo.registry.RegistryService?application=t&dubbo=2.5.3&pid=7236&registry=zookeeper&timestamp=1521616056767, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:868 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:876 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:896 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:913 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:924 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:36:952 [main] [NettyHelper.java:70][DEBUG]: [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:098 [main] [AbstractServer.java:69][INFO]: [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.0.102:20880, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:103 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:115 [main] [AbstractRegistry.java:232][INFO]: [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-127.0.0.1.cache, data: {com.zubbo.api.TestService=empty://192.168.0.102/com.zubbo.api.TestService?application=c&category=configurators&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=2376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1521511930222 empty://192.168.0.102/com.zubbo.api.TestService?application=c&category=routers&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=2376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1521511930222 dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=4516&revision=0.0.1-SNAPSHOT&side=provider&timestamp=1521511893365}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:125 [main] [ZkConnection.java:63][DEBUG]:Creating new ZookKeeper instance to connect to 127.0.0.1:2181.
2018-03-21 15:07:37:125 [ZkClient-EventThread-14-127.0.0.1:2181] [ZkEventThread.java:64][INFO]:Starting ZkClient event thread.
2018-03-21 15:07:37:130 [main] [Environment.java:97][INFO]:Client environment:zookeeper.version=3.3.3-1073969, built on 02/23/2011 22:27 GMT
2018-03-21 15:07:37:131 [main] [Environment.java:97][INFO]:Client environment:host.name=oys-PC
2018-03-21 15:07:37:131 [main] [Environment.java:97][INFO]:Client environment:java.version=1.8.0_131
2018-03-21 15:07:37:131 [main] [Environment.java:97][INFO]:Client environment:java.vendor=Oracle Corporation
2018-03-21 15:07:37:132 [main] [Environment.java:97][INFO]:Client environment:java.home=C:\Program Files\Java\jdk1.8.0_131\jre
2018-03-21 15:07:37:132 [main] [Environment.java:97][INFO]:Client environment:java.class.path=D:\workspace\zubbo\zubbo-pro\target\classes;D:\workspace\zubbo\zubbo-api\target\classes;D:\Maven_Repository\org\springframework\spring-core\4.2.4.RELEASE\spring-core-4.2.4.RELEASE.jar;D:\Maven_Repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;D:\Maven_Repository\org\springframework\spring-orm\4.2.4.RELEASE\spring-orm-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-aspects\4.2.4.RELEASE\spring-aspects-4.2.4.RELEASE.jar;D:\Maven_Repository\org\aspectj\aspectjweaver\1.8.7\aspectjweaver-1.8.7.jar;D:\Maven_Repository\org\springframework\spring-oxm\4.2.4.RELEASE\spring-oxm-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-jdbc\4.2.4.RELEASE\spring-jdbc-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-tx\4.2.4.RELEASE\spring-tx-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-aop\4.2.4.RELEASE\spring-aop-4.2.4.RELEASE.jar;D:\Maven_Repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;D:\Maven_Repository\org\springframework\spring-web\4.2.4.RELEASE\spring-web-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-context\4.2.4.RELEASE\spring-context-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-webmvc\4.2.4.RELEASE\spring-webmvc-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-expression\4.2.4.RELEASE\spring-expression-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-context-support\4.2.4.RELEASE\spring-context-support-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-test\4.2.4.RELEASE\spring-test-4.2.4.RELEASE.jar;D:\Maven_Repository\org\springframework\spring-beans\4.2.4.RELEASE\spring-beans-4.2.4.RELEASE.jar;D:\Maven_Repository\com\alibaba\dubbo\2.5.3\dubbo-2.5.3.jar;D:\Maven_Repository\org\springframework\spring\2.5.6.SEC03\spring-2.5.6.SEC03.jar;D:\Maven_Repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;D:\Maven_Repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;D:\Maven_Repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;D:\Maven_Repository\org\apache\zookeeper\zookeeper\3.3.3\zookeeper-3.3.3.jar;D:\Maven_Repository\jline\jline\0.9.94\jline-0.9.94.jar;D:\Maven_Repository\log4j\log4j\1.2.14\log4j-1.2.14.jar
2018-03-21 15:07:37:132 [main] [Environment.java:97][INFO]:Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_66\bin;D:\apache-maven-3.3.9\bin;D:\TortoiseSVN\bin;C:\Program Files (x86)\HP\LoadRunner\strawberry-perl\perl\bin;C:\Program Files\Git\cmd;;D:\Program File\Microsoft VS Code\bin;D:\eclipse;;.
2018-03-21 15:07:37:132 [main] [Environment.java:97][INFO]:Client environment:java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\
2018-03-21 15:07:37:133 [main] [Environment.java:97][INFO]:Client environment:java.compiler=<NA>
2018-03-21 15:07:37:133 [main] [Environment.java:97][INFO]:Client environment:os.name=Windows 7
2018-03-21 15:07:37:133 [main] [Environment.java:97][INFO]:Client environment:os.arch=amd64
2018-03-21 15:07:37:133 [main] [Environment.java:97][INFO]:Client environment:os.version=6.1
2018-03-21 15:07:37:133 [main] [Environment.java:97][INFO]:Client environment:user.name=Administrator
2018-03-21 15:07:37:134 [main] [Environment.java:97][INFO]:Client environment:user.home=C:\Users\Administrator
2018-03-21 15:07:37:134 [main] [Environment.java:97][INFO]:Client environment:user.dir=D:\workspace\zubbo\zubbo-pro
2018-03-21 15:07:37:135 [main] [ZooKeeper.java:373][INFO]:Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@67c33749
2018-03-21 15:07:37:137 [main] [ClientCnxn.java:99][DEBUG]:zookeeper.disableAutoWatchReset is false
2018-03-21 15:07:37:143 [main] [ZkClient.java:874][DEBUG]:Awaiting connection to Zookeeper server
2018-03-21 15:07:37:144 [main-SendThread()] [ClientCnxn.java:1041][INFO]:Opening socket connection to server /127.0.0.1:2181
2018-03-21 15:07:37:144 [main] [ZkClient.java:628][DEBUG]:Waiting for keeper state SyncConnected
2018-03-21 15:07:37:146 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:949][INFO]:Socket connection established to 127.0.0.1/127.0.0.1:2181, initiating session
2018-03-21 15:07:37:147 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:996][DEBUG]:Session establishment request sent on 127.0.0.1/127.0.0.1:2181
2018-03-21 15:07:37:207 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:738][INFO]:Session establishment complete on server 127.0.0.1/127.0.0.1:2181, sessionid = 0x162476241cb0000, negotiated timeout = 30000
2018-03-21 15:07:37:209 [main-EventThread] [ZkClient.java:351][DEBUG]:Received event: WatchedEvent state:SyncConnected type:None path:null
2018-03-21 15:07:37:209 [main-EventThread] [ZkClient.java:449][INFO]:zookeeper state changed (SyncConnected)
2018-03-21 15:07:37:209 [main-EventThread] [ZkClient.java:395][DEBUG]:Leaving process event
2018-03-21 15:07:37:209 [main] [ZkClient.java:638][DEBUG]:State is SyncConnected
2018-03-21 15:07:37:210 [main] [AbstractRegistry.java:302][INFO]: [DUBBO] Register: dubbo://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7236&side=provider&timestamp=1521616056786, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:237 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,818,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2018-03-21 15:07:37:259 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,819,-110  request:: '/dubbo/com.zubbo.api.TestService,,v{s{31,s{'world,'anyone}}},0  response::  
2018-03-21 15:07:37:276 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,820,-110  request:: '/dubbo/com.zubbo.api.TestService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2018-03-21 15:07:37:293 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,821,0  request:: '/dubbo/com.zubbo.api.TestService/providers/dubbo%253A%252F%252F192.168.0.102%253A20880%252Fcom.zubbo.api.TestService%253Fanyhost%253Dtrue%2526application%253Dt%2526dubbo%253D2.5.3%2526interface%253Dcom.zubbo.api.TestService%2526methods%253DsayHello%2526pid%253D7236%2526side%253Dprovider%2526timestamp%253D1521616056786,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.zubbo.api.TestService/providers/dubbo%253A%252F%252F192.168.0.102%253A20880%252Fcom.zubbo.api.TestService%253Fanyhost%253Dtrue%2526application%253Dt%2526dubbo%253D2.5.3%2526interface%253Dcom.zubbo.api.TestService%2526methods%253DsayHello%2526pid%253D7236%2526side%253Dprovider%2526timestamp%253D1521616056786 
2018-03-21 15:07:37:294 [main] [AbstractRegistry.java:325][INFO]: [DUBBO] Subscribe: provider://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&category=configurators&check=false&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7236&side=provider&timestamp=1521616056786, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:319 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,822,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2018-03-21 15:07:37:334 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,823,-110  request:: '/dubbo/com.zubbo.api.TestService,,v{s{31,s{'world,'anyone}}},0  response::  
2018-03-21 15:07:37:351 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,824,-110  request:: '/dubbo/com.zubbo.api.TestService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2018-03-21 15:07:37:357 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,824,0  request:: '/dubbo/com.zubbo.api.TestService/configurators,T  response:: s{633,633,1521510844649,1521510844649,0,0,0,0,0,0,633} 
2018-03-21 15:07:37:362 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:838][DEBUG]:Reading reply sessionid:0x162476241cb0000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,824,0  request:: '/dubbo/com.zubbo.api.TestService/configurators,T  response:: v{} 
2018-03-21 15:07:37:362 [main] [AbstractRegistry.java:422][INFO]: [DUBBO] Notify urls for subscribe url provider://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&category=configurators&check=false&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7236&side=provider&timestamp=1521616056786, urls: [empty://192.168.0.102:20880/com.zubbo.api.TestService?anyhost=true&application=t&category=configurators&check=false&dubbo=2.5.3&interface=com.zubbo.api.TestService&methods=sayHello&pid=7236&side=provider&timestamp=1521616056786], dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:369 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:377 [main] [ExtensionLoader.java:943][DEBUG]: [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:37:385 [main] [PropertySourcesPropertyResolver.java:81][DEBUG]:Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2018-03-21 15:07:37:386 [main] [PropertySourcesPropertyResolver.java:81][DEBUG]:Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2018-03-21 15:07:37:386 [main] [PropertySourcesPropertyResolver.java:103][DEBUG]:Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2018-03-21 15:07:37:387 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'lifecycleProcessor'
2018-03-21 15:07:37:388 [main] [AbstractBeanFactory.java:251][DEBUG]:Returning cached instance of singleton bean 'com.zubbo.api.TestService'
2018-03-21 15:07:37:388 [main] [Main.java:81][INFO]: [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.5.3, current host: 127.0.0.1
2018-03-21 15:07:47:363 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:758][DEBUG]:Got ping response for sessionid: 0x162476241cb0000 after 2ms
2018-03-21 15:07:57:365 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:758][DEBUG]:Got ping response for sessionid: 0x162476241cb0000 after 1ms
2018-03-21 15:08:07:365 [main-SendThread(127.0.0.1:2181)] [ClientCnxn.java:758][DEBUG]:Got ping response for sessionid: 0x162476241cb0000 after 1ms
